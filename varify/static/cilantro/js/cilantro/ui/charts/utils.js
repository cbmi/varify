define(["underscore","highcharts"],function(t,e){var i,n,s,o,r;return n=function(t){var i;return i=e.getOptions().colors,i[t%i.length]},i=/\d{4}-\d{2]-\d{2]/,o=function(t){var e,i,n;return n=parseInt(t.substr(0,4)),i=parseInt(t.substr(5,2))-1,e=parseInt(t.substr(8,2)),Date.UTC(n,i,e)},r=function(t,i,s){var r,a,l,u,h,c,p,d,f,g,v,m,y,_,w,b,x,C,k,$,E,S,P,O,T,A,N,I,j,q,D,V,R,F,L,W,M,z;if(i.length>2)throw new Error("3-dimensional charts are not supported.                Specify which field the series applies to.");if(!i)throw new Error("The field instances must be supplied");for(S=[],j=[],E=i[0],I=i[1],P=E.get("name"),$=E.get("enumerable")||"boolean"===E.get("simple_type"),O="date"===E.get("simple_type")?"datetime":"linear",I?(q=I.get("name"),N=I.get("enumerable")||"boolean"===I.get("simple_type"),D="date"===I.get("simple_type")?"datetime":"linear"):(q="Frequency",N=!1,D="linear"),$&&N?(a="scatter",S.push(" "),j.push(" ")):a=!I||$||N?N?"scatter":"datetime"===O||"datetime"===D?"line":"column":"scatter",w={},l=t.clustered,M=t.data,c=R=0,L=M.length;L>R;c=++R)y=M[c],C=null!=s?y.values.slice(s,s+1)[0]:"",(_=w[C])?(_.data.push(y),_.stats.min=Math.min(_.stats.min,y.count),_.stats.max=Math.max(_.stats.max,y.count),_.stats.sum+=y.count):(_=w[C]={name:C,stats:{min:y.count,max:y.count,sum:y.count}},_.data=$&&N?[{x:0,y:0,radius:0,sentinel:!0},y]:[y]),k=y.values[0],null===k&&(k="(no data)"),$?(-1===(p=S.indexOf(k.toString()))&&(p=S.push(k.toString())-1),k=p):"datetime"===O&&(k=o(k)),I?(A=y.values[1],null===A&&(A="(no data)"),N?(-1===(p=j.indexOf(A.toString()))&&(p=j.push(A.toString())-1),A=p):"datetime"===D&&(A=o(A))):A=y.count,y.x=k,y.y=A;b=[],$&&N&&(T=S.push(" ")-1,V=j.push(" ")-1),x=0;for(f in w){if(_=w[f],$&&N&&(_.data.push({x:0,y:V,radius:0,sentinel:!0}),_.data.push({x:T,y:V,radius:0,sentinel:!0}),_.data.push({x:T,y:V,radius:0,sentinel:!0})),b.push(_),r=_.stats.avg=_.stats.sum/parseFloat(_.data.length,10),d=_.stats.max,"scatter"===a)for(z=_.data,F=0,W=z.length;W>F;F++)m=z[F],m.sentinel||(g=Math.min(Math.max(parseInt(5*(parseFloat(m.count,10)/r))/10,.05),1),u=e.Color(n(x)).setOpacity(g),m.marker={fillColor:u.get()},$&&(m.marker.radius=7));x++}return h="scatter"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+this.series.yAxis.categories[this.point.y]}:function(){return"<b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+this.series.yAxis.categories[this.point.y]}:"column"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+P+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))},v={clustered:l,chart:{type:a},title:{text:I?""+P+" vs. "+q:""+P+" "+q},series:b,xAxis:{title:{text:P},type:O},yAxis:{title:{text:q},type:D},tooltip:{formatter:h}},S.length&&(v.xAxis.categories=S),j.length&&(v.yAxis.categories=j),b[1]||(v.legend={enabled:!1}),"scatter"===a&&(v.yAxis.gridLineWidth=0,$||(v.chart.zoomType="xy")),v},s=function(e){var i,n,s,o,r;for(s=[],o=0,r=e.length;r>o;o++)i=e[o],n=t.clone(i),n.x=i.values[0],n.y=null!=i.values[1]?i.values[1]:i.count,s.push(n);return{data:t.sortBy(s,"x")}},{processResponse:r,getSeries:s}});
//@ sourceMappingURL=utils.js.map